import React, { useContext, useState } from 'react'
import './LeftSideBar.css'
import assets from '../../assets/assets.js'
import { useNavigate } from 'react-router-dom'
import { db } from '../../config/firebase.js'
import { arrayUnion, collection, doc, getDocs, query, serverTimestamp, setDoc, updateDoc, where } from 'firebase/firestore'
import { AppContext } from '../../context/AppContext.jsx'
/* best practice to add file extension for assets.js */

const LeftSideBar = () => {

  const navigate = useNavigate();
  const { userData } = useContext(AppContext);
  const [user, setUser] = useState(null);
  const [showSearch, setShowSearch] = useState(false);

  const inputHandler = async (e) => {
    try {
      const input = e.target.value;
      if (input) {
        setShowSearch(true);
        const userRef = collection(db, 'users');
        const q = query(userRef, where('username', '>=', input.toLowerCase()), where('username', '<=', input.toLowerCase() + '\uf8ff'));
        const querySnap = await getDocs(q);
        if (!querySnap.empty && querySnap.docs[0].data().id !== userData.id) {
          setUser(querySnap.docs[0].data());
        } else {
          setUser(null);
        }
      } else {
        setShowSearch(false);
        setUser(null);
      }
    } catch (error) {
      console.log(error);
    }
  }

  const addChat = async () => {
    const messagesRef = collection(db, 'messages');
    const chatsRef = collection(db, 'chats');
    try {
      const newMessageRef = doc(messagesRef);
      await setDoc(newMessageRef, {
        createAt: serverTimestamp(),
        messages:[],
      });
      await updateDoc(doc(chatsRef, user.id), {
        chatsData: arrayUnion({
          messageId: newMessageRef.id,
          lastMessage: '', 
          rId: userData.id,
          updatedAt: Date.now(),
          messageSeen: true,
        }),
      });
    } catch (error) {
      
    }
  }

  return (
    <div className='ls'>
      <div className='ls-top'>
        <div className="ls-nav">
          <img src={assets.logo} alt="logo" className="logo" />
          <div className="menu">
            <img src={assets.menu_icon} alt="" />
            <div className="sub-menu">
              <p onClick={() => navigate('/profile')}>Edit Profile</p>
              <hr />
              <p onClick={() => signOut(auth)}>Logout</p>
            </div>
          </div>
        </div>
        <div className="ls-search">
          <img src={assets.search_icon} alt="" />
          <input onChange={inputHandler} type="text" placeholder='Search here, bro' />
        </div>
      </div>
      <div className="ls-list">
        {showSearch && user
          ? <div onClick={addChat} className="friends add-user">
            <img src={user.avatar} alt="" />
            <p>{user.username}</p>
          </div>
          : Array(12).fill("").map((item, index) => (
            <div key={index} className="friends">
              <img src={assets.profile_img} alt="" />
              <div>
                <p> Jahsh </p>
                <span>Hi, what's up? </span>
              </div>
            </div>
          ))}
      </div>
    </div>
  )
}

export default LeftSideBar